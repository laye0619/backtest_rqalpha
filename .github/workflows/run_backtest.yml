name: Run Rqalpha Backtest

on:
  workflow_dispatch:
    inputs:
      strategy_category:
        description: 'strategy category'
        required: true
        default: 'rotation_strategy'
      strategy_name:
        description: 'strategy name'
        required: true
        default: 'rs_m_ind'
      backtest_type:
        description: 'param_optimize or period_test'
        required: true
        default: 'param_optimize'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install sshpass wget
        wget https://onboardcloud.dl.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz
        tar -xzvf ./ta-lib-0.4.0-src.tar.gz
        cd ta-lib
        ./configure --prefix=/usr
        make
        cd ..

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install rqalpha pandas TA-Lib
        rqalpha download-bundle

    - name: Run backtest python file
      run: |
        if [ ! -d ./backtest/${{ github.event.inputs.strategy_category }}/bt_report/${{ github.event.inputs.strategy_name }}/${{ github.event.inputs.backtest_type }} ]; then
          mkdir -p ./backtest/${{ github.event.inputs.strategy_category }}/bt_report/${{ github.event.inputs.strategy_name }}/${{ github.event.inputs.backtest_type }}
        else
          rm -rf ./backtest/${{ github.event.inputs.strategy_category }}/bt_report/${{ github.event.inputs.strategy_name }}/${{ github.event.inputs.backtest_type }}/*
        fi
        export PYTHONPATH=$PYTHONPATH:$PWD
        python -u ./backtest/${{ github.event.inputs.strategy_category }}/bt/${{ github.event.inputs.strategy_name }}/${{ github.event.inputs.strategy_name }}_${{ github.event.inputs.backtest_type }}.py
    
    - name: Upload report to Home Server
      run: |
        sshpass -p ${{ secrets.HOME_SERVER_PASS }} scp -P ${{ secrets.HOME_SERVER_PORT }} -o StrictHostKeyChecking=no ./backtest/${{ github.event.inputs.strategy_category }}/bt_report/${{ github.event.inputs.strategy_name }}/${{ github.event.inputs.backtest_type }}/*.xlsx ${{ secrets.HOME_SERVER_USERNAME }}@${{ secrets.HOME_SERVER_ADDRESS }}:/home/layewang/Downloads

# find ./backtest/${{ github.event.inputs.strategy_category }}/bt_report/${{ github.event.inputs.strategy_name }}/${{ github.event.inputs.backtest_type }} -name "*.pkl" -depth -exec rm {} \; 
# tar -czf report_${{ github.event.inputs.strategy_name }}_${{ github.event.inputs.backtest_type }}.tar.gz ./backtest/${{ github.event.inputs.strategy_category }}/bt_report/${{ github.event.inputs.strategy_name }}/${{ github.event.inputs.backtest_type }}